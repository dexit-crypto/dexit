{
  "fileName": "Factory.sol",
  "contractName": "Factory",
  "source": "pragma solidity ^0.6.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./MockAggregator.sol\";\nimport \"./PriceConsumerV3.sol\";\nimport \"./Swap.sol\";\nimport \"./ERC20Token.sol\";\n\n\ncontract Factory {\n\n    uint constant initialSupply = 10000 * 10**18;\n    Swap public swapContract;\n    ERC20Token public aaveContract;\n    ERC20Token public batContract;\n    ERC20Token public gnoContract;\n    ERC20Token public linkContract;\n    ERC20Token public uniContract;\n    ERC20Token public usdtContract;\n    ERC20Token public wethContract;\n    ERC20Token public wbtcContract;\n    address owner;\n\n    constructor() public {\n        owner = msg.sender;\n        swapContract = new Swap();\n        addOracle(630000000000000);\n        aaveContract = new ERC20Token(\"AAVE\", \"AAVE\", initialSupply, address(swapContract));\n        addOracle(ERC20(aaveContract), 3003003000000000);\n        batContract = new ERC20Token(\"Basic Atention Token\", \"BAT\", initialSupply, address(swapContract));\n        addOracle(ERC20(batContract), 3207184092370000000);\n        gnoContract = new ERC20Token(\"Gnosis\", \"GNO\", initialSupply, address(swapContract));\n        addOracle(ERC20(gnoContract), 7045726760000000);\n        linkContract = new ERC20Token(\"Chainlink\", \"LINK\", initialSupply, address(swapContract));\n        addOracle(ERC20(linkContract), 41666666660000000);\n        uniContract = new ERC20Token(\"UniSwap\", \"UNI\", initialSupply, address(swapContract));\n        addOracle(ERC20(uniContract), 48685491720000000);\n        usdtContract = new ERC20Token(\"USDT\", \"USDT\", initialSupply, address(swapContract));\n        addOracle(ERC20(usdtContract), 1000000000000000000);\n        wethContract = new ERC20Token(\"Wrapped Ether\", \"WETH\", initialSupply, address(swapContract));\n        addOracle(ERC20(wethContract), 630000000000000);\n        wbtcContract = new ERC20Token(\"Wrapped Bitcoin\", \"WBTC\", initialSupply, address(swapContract));\n        addOracle(ERC20(wbtcContract), 26746540000000);\n    }\n\n    function addOracle(ERC20 erc20_, int256 price_) public payable {\n        MockAggregator mockAggregator = new MockAggregator(0, price_, 0, 0, 0);\n        PriceConsumerV3 consumer = new PriceConsumerV3(mockAggregator);\n        swapContract.addOracleForERC20(erc20_, consumer);\n    }\n\n    function addOracle(int256 price_) public payable {\n        MockAggregator mockAggregator = new MockAggregator(0, price_, 0, 0, 0);\n        PriceConsumerV3 consumer = new PriceConsumerV3(mockAggregator);\n        swapContract.addOracle(consumer);\n    }\n\n    function getSwapContractAddress() public view returns (address){\n        return address(swapContract);\n    }\n\n    function getAave() public view returns (address){\n        return address(aaveContract);\n    }\n\n    function getBat() public view returns (address){\n        return address(batContract);\n    }\n\n    function getGno() public view returns (address){\n        return address(gnoContract);\n    }\n\n    function getLink() public view returns (address){\n        return address(linkContract);\n    }\n\n    function getUni() public view returns (address){\n        return address(uniContract);\n    }\n\n    function getUsdt() public view returns (address){\n        return address(usdtContract);\n    }\n\n    function getWeth() public view returns (address){\n        return address(wethContract);\n    }\n\n    function getWbtc() public view returns (address){\n        return address(wbtcContract);\n    }\n}\n",
  "sourcePath": "contracts/Factory.sol",
  "sourceMap": "194:3230:7:-:0;;;603:1377;5:9:-1;2:2;;;27:1;24;17:12;2:2;603:1377:7;642:10;634:5;;:18;;;;;;;;;;;;;;;;;;677:10;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;677:10:7;662:12;;:25;;;;;;;;;;;;;;;;;;697:26;707:15;697:9;;;:26;;:::i;:::-;248:14;802:12;;;;;;;;;;;748:68;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;748:68:7;733:12;;:83;;;;;;;;;;;;;;;;;;826:48;842:12;;;;;;;;;;;857:16;826:9;;;:48;;:::i;:::-;248:14;967:12;;;;;;;;;;;898:83;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;898:83:7;884:11;;:97;;;;;;;;;;;;;;;;;;991:50;1007:11;;;;;;;;;;;1021:19;991:9;;;:50;;:::i;:::-;248:14;1120:12;;;;;;;;;;;1065:69;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1065:69:7;1051:11;;:83;;;;;;;;;;;;;;;;;;1144:47;1160:11;;;;;;;;;;;1174:16;1144:9;;;:47;;:::i;:::-;248:14;1275:12;;;;;;;;;;;1216:73;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1216:73:7;1201:12;;:88;;;;;;;;;;;;;;;;;;1299:49;1315:12;;;;;;;;;;;1330:17;1299:9;;;:49;;:::i;:::-;248:14;1428:12;;;;;;;;;;;1372:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1372:70:7;1358:11;;:84;;;;;;;;;;;;;;;;;;1452:48;1468:11;;;;;;;;;;;1482:17;1452:9;;;:48;;:::i;:::-;248:14;1579:12;;;;;;;;;;;1525:68;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1525:68:7;1510:12;;:83;;;;;;;;;;;;;;;;;;1603:51;1619:12;;;;;;;;;;;1634:19;1603:9;;;:51;;:::i;:::-;248:14;1742:12;;;;;;;;;;;1679:77;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1679:77:7;1664:12;;:92;;;;;;;;;;;;;;;;;;1766:47;1782:12;;;;;;;;;;;1797:15;1766:9;;;:47;;:::i;:::-;248:14;1903:12;;;;;;;;;;;1838:79;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1838:79:7;1823:12;;:94;;;;;;;;;;;;;;;;;;1927:46;1943:12;;;;;;;;;;;1958:14;1927:9;;;:46;;:::i;:::-;194:3230;;2272:250;2331:29;2382:1;2385:6;2393:1;2396;2399;2363:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2363:38:7;2331:70;;2411:24;2458:14;2438:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2438:35:7;2411:62;;2483:12;;;;;;;;;;;:22;;;2506:8;2483:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2483:32:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2483:32:7;;;;2272:250;;;:::o;1986:280::-;2059:29;2110:1;2113:6;2121:1;2124;2127;2091:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2091:38:7;2059:70;;2139:24;2186:14;2166:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2166:35:7;2139:62;;2211:12;;;;;;;;;;;:30;;;2242:6;2250:8;2211:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2211:48:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2211:48:7;;;;1986:280;;;;:::o;194:3230::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "194:3230:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3131:93:7;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3131:93:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3230;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3230:93:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2741:91;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2741:91:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2272:250;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2272:250:7;;;;;;;;;;;;;;;;;:::i;:::-;;511:30;;5:9:-1;2:2;;;27:1;24;17:12;2:2;511:30:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3329:93;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3329:93:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;440:29;;5:9:-1;2:2;;;27:1;24;17:12;2:2;440:29:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;404:30;;5:9:-1;2:2;;;27:1;24;17:12;2:2;404:30:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2528:108;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2528:108:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;475:30;;5:9:-1;2:2;;;27:1;24;17:12;2:2;475:30:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;334:29;;5:9:-1;2:2;;;27:1;24;17:12;2:2;334:29:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;369;;5:9:-1;2:2;;;27:1;24;17:12;2:2;369:29:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;547:30;;5:9:-1;2:2;;;27:1;24;17:12;2:2;547:30:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;298;;5:9:-1;2:2;;;27:1;24;17:12;2:2;298:30:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;268:24;;5:9:-1;2:2;;;27:1;24;17:12;2:2;268:24:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2838:91;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2838:91:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1986:280;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1986:280:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3034:91;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3034:91:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2935:93;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2935:93:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2642;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2642:93:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3131;3171:7;3204:12;;;;;;;;;;;3189:28;;3131:93;:::o;3230:::-;3270:7;3303:12;;;;;;;;;;;3288:28;;3230:93;:::o;2741:91::-;2780:7;2813:11;;;;;;;;;;;2798:27;;2741:91;:::o;2272:250::-;2331:29;2382:1;2385:6;2393:1;2396;2399;2363:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2363:38:7;2331:70;;2411:24;2458:14;2438:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2438:35:7;2411:62;;2483:12;;;;;;;;;;;:22;;;2506:8;2483:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2483:32:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2483:32:7;;;;2272:250;;;:::o;511:30::-;;;;;;;;;;;;;:::o;3329:93::-;3369:7;3402:12;;;;;;;;;;;3387:28;;3329:93;:::o;440:29::-;;;;;;;;;;;;;:::o;404:30::-;;;;;;;;;;;;;:::o;2528:108::-;2583:7;2616:12;;;;;;;;;;;2601:28;;2528:108;:::o;475:30::-;;;;;;;;;;;;;:::o;334:29::-;;;;;;;;;;;;;:::o;369:::-;;;;;;;;;;;;;:::o;547:30::-;;;;;;;;;;;;;:::o;298:::-;;;;;;;;;;;;;:::o;268:24::-;;;;;;;;;;;;;:::o;2838:91::-;2877:7;2910:11;;;;;;;;;;;2895:27;;2838:91;:::o;1986:280::-;2059:29;2110:1;2113:6;2121:1;2124;2127;2091:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2091:38:7;2059:70;;2139:24;2186:14;2166:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2166:35:7;2139:62;;2211:12;;;;;;;;;;;:30;;;2242:6;2250:8;2211:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2211:48:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2211:48:7;;;;1986:280;;;;:::o;3034:91::-;3073:7;3106:11;;;;;;;;;;;3091:27;;3034:91;:::o;2935:93::-;2975:7;3008:12;;;;;;;;;;;2993:28;;2935:93;:::o;2642:::-;2682:7;2715:12;;;;;;;;;;;2700:28;;2642:93;:::o;194:3230::-;;;;;;;;:::o;:::-;;;;;;;;:::o",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "aaveContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "price_",
          "type": "int256"
        }
      ],
      "name": "addOracle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "erc20_",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "price_",
          "type": "int256"
        }
      ],
      "name": "addOracle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "batContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAave",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBat",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGno",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLink",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSwapContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUni",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUsdt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWbtc",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWeth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gnoContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "linkContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapContract",
      "outputs": [
        {
          "internalType": "contract Swap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdtContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wbtcContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethContract",
      "outputs": [
        {
          "internalType": "contract ERC20Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        1357
      ]
    },
    "id": 1358,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 983,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 984,
        "nodeType": "ImportDirective",
        "scope": 1358,
        "sourceUnit": 877,
        "src": "25:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MockAggregator.sol",
        "file": "./MockAggregator.sol",
        "id": 985,
        "nodeType": "ImportDirective",
        "scope": 1358,
        "sourceUnit": 1507,
        "src": "81:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/PriceConsumerV3.sol",
        "file": "./PriceConsumerV3.sol",
        "id": 986,
        "nodeType": "ImportDirective",
        "scope": 1358,
        "sourceUnit": 1548,
        "src": "112:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Swap.sol",
        "file": "./Swap.sol",
        "id": 987,
        "nodeType": "ImportDirective",
        "scope": 1358,
        "sourceUnit": 2070,
        "src": "144:20:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 988,
        "nodeType": "ImportDirective",
        "scope": 1358,
        "sourceUnit": 982,
        "src": "165:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          981,
          1506,
          1547,
          2069
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1357,
        "linearizedBaseContracts": [
          1357
        ],
        "name": "Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 995,
            "mutability": "constant",
            "name": "initialSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "218:44:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 989,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "218:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              },
              "id": 994,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130303030",
                "id": 990,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "248:5:7",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "10000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 993,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 991,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "256:2:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3138",
                  "id": 992,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "260:2:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "256:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "248:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8ea83031",
            "id": 997,
            "mutability": "mutable",
            "name": "swapContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "268:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Swap_$2069",
              "typeString": "contract Swap"
            },
            "typeName": {
              "contractScope": null,
              "id": 996,
              "name": "Swap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2069,
              "src": "268:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Swap_$2069",
                "typeString": "contract Swap"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8e33f776",
            "id": 999,
            "mutability": "mutable",
            "name": "aaveContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "298:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 998,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "298:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6d606201",
            "id": 1001,
            "mutability": "mutable",
            "name": "batContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "334:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 1000,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "334:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7231105f",
            "id": 1003,
            "mutability": "mutable",
            "name": "gnoContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "369:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 1002,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "369:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "527ba408",
            "id": 1005,
            "mutability": "mutable",
            "name": "linkContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "404:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 1004,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "404:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50a3423d",
            "id": 1007,
            "mutability": "mutable",
            "name": "uniContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "440:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 1006,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "440:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61150923",
            "id": 1009,
            "mutability": "mutable",
            "name": "usdtContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "475:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 1008,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "475:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4780eac1",
            "id": 1011,
            "mutability": "mutable",
            "name": "wethContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "511:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 1010,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "511:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "807a012d",
            "id": 1013,
            "mutability": "mutable",
            "name": "wbtcContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "547:30:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Token_$981",
              "typeString": "contract ERC20Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 1012,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "547:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$981",
                "typeString": "contract ERC20Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1015,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1357,
            "src": "583:13:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1014,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "583:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "624:1356:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1018,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1015,
                      "src": "634:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1019,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "642:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "642:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "634:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "634:18:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1023,
                      "name": "swapContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "662:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Swap_$2069",
                        "typeString": "contract Swap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "677:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Swap_$2069_$",
                          "typeString": "function () returns (contract Swap)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1024,
                          "name": "Swap",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 2069,
                          "src": "681:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Swap_$2069",
                            "typeString": "contract Swap"
                          }
                        }
                      },
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "677:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Swap_$2069",
                        "typeString": "contract Swap"
                      }
                    },
                    "src": "662:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Swap_$2069",
                      "typeString": "contract Swap"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "662:25:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "363330303030303030303030303030",
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:15:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_630000000000000_by_1",
                          "typeString": "int_const 630000000000000"
                        },
                        "value": "630000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_630000000000000_by_1",
                          "typeString": "int_const 630000000000000"
                        }
                      ],
                      "id": 1029,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1257,
                      "src": "697:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$returns$__$",
                        "typeString": "function (int256)"
                      }
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "697:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "697:26:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1033,
                      "name": "aaveContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "733:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "41415645",
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "763:6:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_de46fbfa339d54cd65b79d8320a7a53c78177565c2aaf4c8b13eed7865e7cfc8",
                            "typeString": "literal_string \"AAVE\""
                          },
                          "value": "AAVE"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "41415645",
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "771:6:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_de46fbfa339d54cd65b79d8320a7a53c78177565c2aaf4c8b13eed7865e7cfc8",
                            "typeString": "literal_string \"AAVE\""
                          },
                          "value": "AAVE"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1038,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "779:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1041,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "802:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "794:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1039,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "794:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "794:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_de46fbfa339d54cd65b79d8320a7a53c78177565c2aaf4c8b13eed7865e7cfc8",
                            "typeString": "literal_string \"AAVE\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_de46fbfa339d54cd65b79d8320a7a53c78177565c2aaf4c8b13eed7865e7cfc8",
                            "typeString": "literal_string \"AAVE\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "748:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1034,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "752:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "748:68:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "733:83:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "733:83:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1048,
                            "name": "aaveContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 999,
                            "src": "842:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1047,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "836:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "836:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "33303033303033303030303030303030",
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "857:16:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3003003000000000_by_1",
                          "typeString": "int_const 3003003000000000"
                        },
                        "value": "3003003000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_3003003000000000_by_1",
                          "typeString": "int_const 3003003000000000"
                        }
                      ],
                      "id": 1046,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "826:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "826:48:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1053,
                      "name": "batContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "884:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "4261736963204174656e74696f6e20546f6b656e",
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "913:22:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fa6d8f207742c7659a09838bd3a5aa990a16ed568d87d3ad7ecc131cff5e3873",
                            "typeString": "literal_string \"Basic Atention Token\""
                          },
                          "value": "Basic Atention Token"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "424154",
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "937:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3ec6762bdf44eb044276fec7d12c1bb640cb139cfd533f93eeebba5414f5db55",
                            "typeString": "literal_string \"BAT\""
                          },
                          "value": "BAT"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1058,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "944:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1061,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "967:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "959:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1059,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "959:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "959:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_fa6d8f207742c7659a09838bd3a5aa990a16ed568d87d3ad7ecc131cff5e3873",
                            "typeString": "literal_string \"Basic Atention Token\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_3ec6762bdf44eb044276fec7d12c1bb640cb139cfd533f93eeebba5414f5db55",
                            "typeString": "literal_string \"BAT\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "898:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1054,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "902:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "898:83:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "884:97:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "884:97:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1068,
                            "name": "batContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "1007:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1067,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1001:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1001:18:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "33323037313834303932333730303030303030",
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1021:19:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3207184092370000000_by_1",
                          "typeString": "int_const 3207184092370000000"
                        },
                        "value": "3207184092370000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_3207184092370000000_by_1",
                          "typeString": "int_const 3207184092370000000"
                        }
                      ],
                      "id": 1066,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "991:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "991:50:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1073,
                      "name": "gnoContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "1051:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "476e6f736973",
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1080:8:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_65575cda967aef5e4a766ba487099a1fa5acba87b34f560ea7a801adbe5d99a9",
                            "typeString": "literal_string \"Gnosis\""
                          },
                          "value": "Gnosis"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "474e4f",
                          "id": 1077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1090:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a7176ea9ccab4e661d15bc0b1e10ef9f3120087c1d1c72680a3a84c988ac7124",
                            "typeString": "literal_string \"GNO\""
                          },
                          "value": "GNO"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1078,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "1097:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1081,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1120:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1112:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1079,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1112:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1112:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_65575cda967aef5e4a766ba487099a1fa5acba87b34f560ea7a801adbe5d99a9",
                            "typeString": "literal_string \"Gnosis\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a7176ea9ccab4e661d15bc0b1e10ef9f3120087c1d1c72680a3a84c988ac7124",
                            "typeString": "literal_string \"GNO\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1065:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1074,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "1069:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1065:69:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "1051:83:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:83:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1088,
                            "name": "gnoContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "1160:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1087,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1154:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1154:18:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "37303435373236373630303030303030",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1174:16:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7045726760000000_by_1",
                          "typeString": "int_const 7045726760000000"
                        },
                        "value": "7045726760000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_7045726760000000_by_1",
                          "typeString": "int_const 7045726760000000"
                        }
                      ],
                      "id": 1086,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1144:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:47:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1093,
                      "name": "linkContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1005,
                      "src": "1201:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "436861696e6c696e6b",
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1231:11:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a4a8c60a1472ac91f967f2318151d051b504a7150e990e8d25967937aff32b66",
                            "typeString": "literal_string \"Chainlink\""
                          },
                          "value": "Chainlink"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "4c494e4b",
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1244:6:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_921a3539bcb764c889432630877414523e7fbca00c211bc787aeae69e2e3a779",
                            "typeString": "literal_string \"LINK\""
                          },
                          "value": "LINK"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1098,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "1252:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1101,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1275:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1267:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1099,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1267:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1267:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_a4a8c60a1472ac91f967f2318151d051b504a7150e990e8d25967937aff32b66",
                            "typeString": "literal_string \"Chainlink\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_921a3539bcb764c889432630877414523e7fbca00c211bc787aeae69e2e3a779",
                            "typeString": "literal_string \"LINK\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1216:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1094,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "1220:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1216:73:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "1201:88:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1105,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:88:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1108,
                            "name": "linkContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "1315:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1107,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1309:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1309:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3431363636363636363630303030303030",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1330:17:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_41666666660000000_by_1",
                          "typeString": "int_const 41666666660000000"
                        },
                        "value": "41666666660000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_41666666660000000_by_1",
                          "typeString": "int_const 41666666660000000"
                        }
                      ],
                      "id": 1106,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1299:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:49:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "uniContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "1358:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "556e6953776170",
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1387:9:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_69f816f0424bfd49fe755be2acf1840137a52bf8feaa5ca1d5c6f013d8f90d7e",
                            "typeString": "literal_string \"UniSwap\""
                          },
                          "value": "UniSwap"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "554e49",
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1398:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fba01d52a7cd84480d0573725899486a0b5e55c20ff45d6628874349375d1650",
                            "typeString": "literal_string \"UNI\""
                          },
                          "value": "UNI"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1118,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "1405:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1121,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1428:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1420:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1119,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1420:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1420:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_69f816f0424bfd49fe755be2acf1840137a52bf8feaa5ca1d5c6f013d8f90d7e",
                            "typeString": "literal_string \"UniSwap\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fba01d52a7cd84480d0573725899486a0b5e55c20ff45d6628874349375d1650",
                            "typeString": "literal_string \"UNI\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1372:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1114,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "1376:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1372:70:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "1358:84:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:84:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1128,
                            "name": "uniContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "1468:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1127,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1462:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1462:18:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3438363835343931373230303030303030",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1482:17:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_48685491720000000_by_1",
                          "typeString": "int_const 48685491720000000"
                        },
                        "value": "48685491720000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_48685491720000000_by_1",
                          "typeString": "int_const 48685491720000000"
                        }
                      ],
                      "id": 1126,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1452:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:48:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1133,
                      "name": "usdtContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "1510:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55534454",
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1540:6:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                            "typeString": "literal_string \"USDT\""
                          },
                          "value": "USDT"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "55534454",
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1548:6:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                            "typeString": "literal_string \"USDT\""
                          },
                          "value": "USDT"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1138,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "1556:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1141,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1579:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1571:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1571:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1571:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                            "typeString": "literal_string \"USDT\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                            "typeString": "literal_string \"USDT\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1525:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1134,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "1529:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1525:68:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "1510:83:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:83:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1148,
                            "name": "usdtContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "1619:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1147,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1613:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1613:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1634:19:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 1146,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1603:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:51:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1153,
                      "name": "wethContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "1664:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "57726170706564204574686572",
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1694:15:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3",
                            "typeString": "literal_string \"Wrapped Ether\""
                          },
                          "value": "Wrapped Ether"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "57455448",
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1711:6:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                            "typeString": "literal_string \"WETH\""
                          },
                          "value": "WETH"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1158,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "1719:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1161,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1742:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1734:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1159,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1734:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1734:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3",
                            "typeString": "literal_string \"Wrapped Ether\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                            "typeString": "literal_string \"WETH\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1679:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1154,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "1683:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1679:77:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "1664:92:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:92:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1168,
                            "name": "wethContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1011,
                            "src": "1782:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1167,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1776:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "363330303030303030303030303030",
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1797:15:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_630000000000000_by_1",
                          "typeString": "int_const 630000000000000"
                        },
                        "value": "630000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_630000000000000_by_1",
                          "typeString": "int_const 630000000000000"
                        }
                      ],
                      "id": 1166,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1766:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:47:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1173,
                      "name": "wbtcContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "1823:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "5772617070656420426974636f696e",
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1853:17:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6f1e4474000cd69613941d4adf7b3a8451de72af6dbbf57fe39ee5ca6b72deab",
                            "typeString": "literal_string \"Wrapped Bitcoin\""
                          },
                          "value": "Wrapped Bitcoin"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "57425443",
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1872:6:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          "value": "WBTC"
                        },
                        {
                          "argumentTypes": null,
                          "id": 1178,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "1880:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1181,
                              "name": "swapContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "1903:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$2069",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1895:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1179,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1895:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1895:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6f1e4474000cd69613941d4adf7b3a8451de72af6dbbf57fe39ee5ca6b72deab",
                            "typeString": "literal_string \"Wrapped Bitcoin\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1838:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_ERC20Token_$981_$",
                          "typeString": "function (string memory,string memory,uint256,address) returns (contract ERC20Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1174,
                          "name": "ERC20Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 981,
                          "src": "1842:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Token_$981",
                            "typeString": "contract ERC20Token"
                          }
                        }
                      },
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1838:79:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Token_$981",
                        "typeString": "contract ERC20Token"
                      }
                    },
                    "src": "1823:94:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$981",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:94:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1188,
                            "name": "wbtcContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "1943:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$981",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1187,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1937:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$876_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1937:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3236373436353430303030303030",
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1958:14:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26746540000000_by_1",
                          "typeString": "int_const 26746540000000"
                        },
                        "value": "26746540000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_26746540000000_by_1",
                          "typeString": "int_const 26746540000000"
                        }
                      ],
                      "id": 1186,
                      "name": "addOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1227,
                        1257
                      ],
                      "referencedDeclaration": 1227,
                      "src": "1927:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$876_$_t_int256_$returns$__$",
                        "typeString": "function (contract ERC20,int256)"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1927:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "1927:46:7"
                }
              ]
            },
            "documentation": null,
            "id": 1194,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:2:7"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:0:7"
            },
            "scope": 1357,
            "src": "603:1377:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1226,
              "nodeType": "Block",
              "src": "2049:217:7",
              "statements": [
                {
                  "assignments": [
                    1202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1202,
                      "mutability": "mutable",
                      "name": "mockAggregator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1226,
                      "src": "2059:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockAggregator_$1506",
                        "typeString": "contract MockAggregator"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1201,
                        "name": "MockAggregator",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1506,
                        "src": "2059:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2110:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 1206,
                        "name": "price_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "2113:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2121:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2124:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2127:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2091:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$returns$_t_contract$_MockAggregator_$1506_$",
                        "typeString": "function (uint80,int256,uint256,uint256,uint80) returns (contract MockAggregator)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1203,
                        "name": "MockAggregator",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1506,
                        "src": "2095:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2091:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockAggregator_$1506",
                      "typeString": "contract MockAggregator"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2059:70:7"
                },
                {
                  "assignments": [
                    1213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1213,
                      "mutability": "mutable",
                      "name": "consumer",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1226,
                      "src": "2139:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                        "typeString": "contract PriceConsumerV3"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1212,
                        "name": "PriceConsumerV3",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1547,
                        "src": "2139:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1218,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1216,
                        "name": "mockAggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "2186:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      ],
                      "id": 1215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2166:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AggregatorV3Interface_$45_$returns$_t_contract$_PriceConsumerV3_$1547_$",
                        "typeString": "function (contract AggregatorV3Interface) returns (contract PriceConsumerV3)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1214,
                        "name": "PriceConsumerV3",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1547,
                        "src": "2170:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2166:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                      "typeString": "contract PriceConsumerV3"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2139:62:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1222,
                        "name": "erc20_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1196,
                        "src": "2242:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1223,
                        "name": "consumer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "2250:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$876",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1219,
                        "name": "swapContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "2211:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Swap_$2069",
                          "typeString": "contract Swap"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addOracleForERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1747,
                      "src": "2211:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$876_$_t_contract$_PriceConsumerV3_$1547_$returns$__$",
                        "typeString": "function (contract ERC20,contract PriceConsumerV3) payable external"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2211:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:48:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bd7cf5b2",
            "id": 1227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addOracle",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "erc20_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1227,
                  "src": "2005:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$876",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1195,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 876,
                    "src": "2005:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$876",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "price_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1227,
                  "src": "2019:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2004:29:7"
            },
            "returnParameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2049:0:7"
            },
            "scope": 1357,
            "src": "1986:280:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1256,
              "nodeType": "Block",
              "src": "2321:201:7",
              "statements": [
                {
                  "assignments": [
                    1233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1233,
                      "mutability": "mutable",
                      "name": "mockAggregator",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1256,
                      "src": "2331:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockAggregator_$1506",
                        "typeString": "contract MockAggregator"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1232,
                        "name": "MockAggregator",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1506,
                        "src": "2331:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1242,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2382:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 1237,
                        "name": "price_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "2385:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2396:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2399:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2363:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$returns$_t_contract$_MockAggregator_$1506_$",
                        "typeString": "function (uint80,int256,uint256,uint256,uint80) returns (contract MockAggregator)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1234,
                        "name": "MockAggregator",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1506,
                        "src": "2367:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockAggregator_$1506",
                      "typeString": "contract MockAggregator"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2331:70:7"
                },
                {
                  "assignments": [
                    1244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1244,
                      "mutability": "mutable",
                      "name": "consumer",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1256,
                      "src": "2411:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                        "typeString": "contract PriceConsumerV3"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1243,
                        "name": "PriceConsumerV3",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1547,
                        "src": "2411:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1249,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1247,
                        "name": "mockAggregator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1233,
                        "src": "2458:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockAggregator_$1506",
                          "typeString": "contract MockAggregator"
                        }
                      ],
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2438:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AggregatorV3Interface_$45_$returns$_t_contract$_PriceConsumerV3_$1547_$",
                        "typeString": "function (contract AggregatorV3Interface) returns (contract PriceConsumerV3)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1245,
                        "name": "PriceConsumerV3",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1547,
                        "src": "2442:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                      "typeString": "contract PriceConsumerV3"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2411:62:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "consumer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "2506:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$1547",
                          "typeString": "contract PriceConsumerV3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1250,
                        "name": "swapContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "2483:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Swap_$2069",
                          "typeString": "contract Swap"
                        }
                      },
                      "id": 1252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addOracle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1731,
                      "src": "2483:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_PriceConsumerV3_$1547_$returns$__$",
                        "typeString": "function (contract PriceConsumerV3) payable external"
                      }
                    },
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2483:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1255,
                  "nodeType": "ExpressionStatement",
                  "src": "2483:32:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "36019a61",
            "id": 1257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addOracle",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "price_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1257,
                  "src": "2291:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2290:15:7"
            },
            "returnParameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:0:7"
            },
            "scope": 1357,
            "src": "2272:250:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "2591:45:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1264,
                        "name": "swapContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 997,
                        "src": "2616:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Swap_$2069",
                          "typeString": "contract Swap"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Swap_$2069",
                          "typeString": "contract Swap"
                        }
                      ],
                      "id": 1263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2608:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2608:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1261,
                  "id": 1266,
                  "nodeType": "Return",
                  "src": "2601:28:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "588c2f14",
            "id": 1268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapContractAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2559:2:7"
            },
            "returnParameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1268,
                  "src": "2583:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2582:9:7"
            },
            "scope": 1357,
            "src": "2528:108:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "2690:45:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1275,
                        "name": "aaveContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 999,
                        "src": "2715:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2707:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1273,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2707:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2707:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1272,
                  "id": 1277,
                  "nodeType": "Return",
                  "src": "2700:28:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f7c1ec77",
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAave",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:2:7"
            },
            "returnParameters": {
              "id": 1272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1279,
                  "src": "2682:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2681:9:7"
            },
            "scope": 1357,
            "src": "2642:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1289,
              "nodeType": "Block",
              "src": "2788:44:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1286,
                        "name": "batContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "2813:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2805:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1284,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2805:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1283,
                  "id": 1288,
                  "nodeType": "Return",
                  "src": "2798:27:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e813870",
            "id": 1290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBat",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2756:2:7"
            },
            "returnParameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1290,
                  "src": "2780:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2780:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2779:9:7"
            },
            "scope": 1357,
            "src": "2741:91:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1300,
              "nodeType": "Block",
              "src": "2885:44:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1297,
                        "name": "gnoContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "2910:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2902:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1295,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2902:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2902:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1294,
                  "id": 1299,
                  "nodeType": "Return",
                  "src": "2895:27:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b8bf4f35",
            "id": 1301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGno",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2853:2:7"
            },
            "returnParameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1301,
                  "src": "2877:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2876:9:7"
            },
            "scope": 1357,
            "src": "2838:91:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "2983:45:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1308,
                        "name": "linkContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "3008:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3000:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1306,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3000:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3000:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1305,
                  "id": 1310,
                  "nodeType": "Return",
                  "src": "2993:28:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2d84e23",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLink",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2951:2:7"
            },
            "returnParameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "2975:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2975:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2974:9:7"
            },
            "scope": 1357,
            "src": "2935:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1322,
              "nodeType": "Block",
              "src": "3081:44:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1319,
                        "name": "uniContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "3106:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3098:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1317,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3098:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3098:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1316,
                  "id": 1321,
                  "nodeType": "Return",
                  "src": "3091:27:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c8e1b062",
            "id": 1323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUni",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3049:2:7"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1323,
                  "src": "3073:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3073:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3072:9:7"
            },
            "scope": 1357,
            "src": "3034:91:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1333,
              "nodeType": "Block",
              "src": "3179:45:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1330,
                        "name": "usdtContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "3204:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3196:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1328,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3196:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1327,
                  "id": 1332,
                  "nodeType": "Return",
                  "src": "3189:28:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "089537ae",
            "id": 1334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUsdt",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3147:2:7"
            },
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1326,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1334,
                  "src": "3171:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3171:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3170:9:7"
            },
            "scope": 1357,
            "src": "3131:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1344,
              "nodeType": "Block",
              "src": "3278:45:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1341,
                        "name": "wethContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "3303:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3295:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1339,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3295:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1338,
                  "id": 1343,
                  "nodeType": "Return",
                  "src": "3288:28:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "107c279f",
            "id": 1345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWeth",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3246:2:7"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1337,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1345,
                  "src": "3270:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3270:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3269:9:7"
            },
            "scope": 1357,
            "src": "3230:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1355,
              "nodeType": "Block",
              "src": "3377:45:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1352,
                        "name": "wbtcContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "3402:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$981",
                          "typeString": "contract ERC20Token"
                        }
                      ],
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3394:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1350,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3394:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3394:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1349,
                  "id": 1354,
                  "nodeType": "Return",
                  "src": "3387:28:7"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4d094823",
            "id": 1356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWbtc",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3345:2:7"
            },
            "returnParameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1348,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1356,
                  "src": "3369:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3368:9:7"
            },
            "scope": 1357,
            "src": "3329:93:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1358,
        "src": "194:3230:7"
      }
    ],
    "src": "0:3425:7"
  },
  "bytecode": "0x60806040523480156200001157600080fd5b5033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620000619062001060565b604051809103906000f0801580156200007e573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000d666023cfb4e35600062000cf560201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405162000111906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835260048152602001807f4141564500000000000000000000000000000000000000000000000000000000815250602001838103825260048152602001807f4141564500000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f080158015620001dd573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000259600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16660aab371f130e0062000e9060201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405162000294906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835260148152602001807f4261736963204174656e74696f6e20546f6b656e000000000000000000000000815250602001838103825260038152602001807f4241540000000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f08015801562000360573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620003dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16672c8234f08aff588062000e9060201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405162000418906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835260068152602001807f476e6f7369730000000000000000000000000000000000000000000000000000815250602001838103825260038152602001807f474e4f0000000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f080158015620004e4573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000560600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166619080d18b6da0062000e9060201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200059b906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835260098152602001807f436861696e6c696e6b0000000000000000000000000000000000000000000000815250602001838103825260048152602001807f4c494e4b00000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f08015801562000667573d6000803e3d6000fd5b50600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006e3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166694079cd13e710062000e9060201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200071e906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835260078152602001807f556e695377617000000000000000000000000000000000000000000000000000815250602001838103825260038152602001807f554e490000000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f080158015620007ea573d6000803e3d6000fd5b50600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000866600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1666acf7325faf920062000e9060201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620008a1906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835260048152602001807f5553445400000000000000000000000000000000000000000000000000000000815250602001838103825260048152602001807f5553445400000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f0801580156200096d573d6000803e3d6000fd5b50600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620009ea600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16670de0b6b3a764000062000e9060201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405162000a25906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381038352600d8152602001807f5772617070656420457468657200000000000000000000000000000000000000815250602001838103825260048152602001807f5745544800000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f08015801562000af1573d6000803e3d6000fd5b50600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000b6d600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1666023cfb4e35600062000e9060201b60201c565b69021e19e0c9bab24000006000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405162000ba8906200106e565b8080602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381038352600f8152602001807f5772617070656420426974636f696e0000000000000000000000000000000000815250602001838103825260048152602001807f5742544300000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f08015801562000c74573d6000803e3d6000fd5b50600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000cef600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166518536a04030062000e9060201b60201c565b62001098565b60008082600080600060405162000d0c906200107c565b808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff16815260200195505050505050604051809103906000f08015801562000d67573d6000803e3d6000fd5b50905060008160405162000d7b906200108a565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801562000dce573d6000803e3d6000fd5b5090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663df5dd1a5826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801562000e7257600080fd5b505af115801562000e87573d6000803e3d6000fd5b50505050505050565b60008082600080600060405162000ea7906200107c565b808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff16815260200195505050505050604051809103906000f08015801562000f02573d6000803e3d6000fd5b50905060008160405162000f16906200108a565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801562000f69573d6000803e3d6000fd5b5090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d58544a685836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200104157600080fd5b505af115801562001056573d6000803e3d6000fd5b5050505050505050565b6124a48062002d9583390190565b611656806200523983390190565b610c4d806200688f83390190565b61020080620074dc83390190565b611ced80620010a86000396000f3fe6080604052600436106200013a5760003560e01c80636d60620111620000af578063b8bf4f35116200006d578063b8bf4f35146200065c578063bd7cf5b214620006b6578063c8e1b0621462000707578063e2d84e231462000761578063f7c1ec7714620007bb576200013a565b80636d606201146200049a5780637231105f14620004f4578063807a012d146200054e5780638e33f77614620005a85780638ea830311462000602576200013a565b80634d09482311620000fd5780634d09482314620002d857806350a3423d1462000332578063527ba408146200038c578063588c2f1414620003e6578063611509231462000440576200013a565b8063089537ae146200013f578063107c279f14620001995780632e81387014620001f357806336019a61146200024d5780634780eac1146200027e575b600080fd5b3480156200014c57600080fd5b506200015762000815565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620001a657600080fd5b50620001b16200083f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200020057600080fd5b506200020b62000869565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200027c600480360360208110156200026557600080fd5b810190808035906020019092919050505062000893565b005b3480156200028b57600080fd5b506200029662000a2e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620002e557600080fd5b50620002f062000a54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200033f57600080fd5b506200034a62000a7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200039957600080fd5b50620003a462000aa4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620003f357600080fd5b50620003fe62000aca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200044d57600080fd5b506200045862000af3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620004a757600080fd5b50620004b262000b19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200050157600080fd5b506200050c62000b3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200055b57600080fd5b506200056662000b65565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620005b557600080fd5b50620005c062000b8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200060f57600080fd5b506200061a62000bb1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200066957600080fd5b506200067462000bd6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200070560048036036040811015620006ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000c00565b005b3480156200071457600080fd5b506200071f62000dd0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200076e57600080fd5b506200077962000dfa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620007c857600080fd5b50620007d362000e24565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080826000806000604051620008aa9062000e4e565b808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff16815260200195505050505050604051809103906000f08015801562000905573d6000803e3d6000fd5b509050600081604051620009199062000e5c565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156200096c573d6000803e3d6000fd5b5090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663df5dd1a5826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801562000a1057600080fd5b505af115801562000a25573d6000803e3d6000fd5b50505050505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082600080600060405162000c179062000e4e565b808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff16815260200195505050505050604051809103906000f08015801562000c72573d6000803e3d6000fd5b50905060008160405162000c869062000e5c565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801562000cd9573d6000803e3d6000fd5b5090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d58544a685836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801562000db157600080fd5b505af115801562000dc6573d6000803e3d6000fd5b5050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c4d8062000e6b83390190565b6102008062001ab88339019056fe608060405234801561001057600080fd5b50604051610c4d380380610c4d833981810160405260a081101561003357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050600061007c61013760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35061012d858585858561013f60201b60201c565b505050505061026e565b600033905090565b61014d61013760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b84600060146101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508360018190555060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690505050505050565b6109d08061027d6000396000f3fe6080604052600436106100865760003560e01c80637284e416116100595780637284e4161461016c5780638da5cb5b146101fc5780639a6fc8f514610253578063f2fde38b146102fa578063feaf968c1461034b57610086565b80631c12940a1461008b578063313ce567146100f957806354fd4d501461012a578063715018a614610155575b600080fd5b6100f7600480360360a08110156100a157600080fd5b81019080803569ffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803569ffffffffffffffffffff1690602001909291905050506103c2565b005b34801561010557600080fd5b5061010e6104eb565b604051808260ff1660ff16815260200191505060405180910390f35b34801561013657600080fd5b5061013f6104f3565b6040518082815260200191505060405180910390f35b34801561016157600080fd5b5061016a6104fb565b005b34801561017857600080fd5b50610181610683565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c15780820151818401526020810190506101a6565b50505050905090810190601f1680156101ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020857600080fd5b506102116106c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025f57600080fd5b506102986004803603602081101561027657600080fd5b81019080803569ffffffffffffffffffff1690602001909291905050506106e9565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b34801561030657600080fd5b506103496004803603602081101561031d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070c565b005b34801561035757600080fd5b50610360610919565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6103ca61096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461048b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b84600060146101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508360018190555060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690505050505050565b600080905090565b600080905090565b61050361096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60606040518060400160405280600481526020017f6d6f636b00000000000000000000000000000000000000000000000000000000815250905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008060006106f9610919565b9450945094509450945091939590929450565b61071461096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561085b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109756026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060008060149054906101000a900469ffffffffffffffffffff16600154600254600354600460009054906101000a900469ffffffffffffffffffff16945094509450945094509091929394565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122016c8195de5bd05513098245e52940ed1b1394930cc4723360dd6f6f2acb078c164736f6c63430006060033608060405234801561001057600080fd5b506040516102003803806102008339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061016c806100946000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004e565b6040518082815260200191505060405180910390f35b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100be57600080fd5b505afa1580156100d2573d6000803e3d6000fd5b505050506040513d60a08110156100e857600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945083955050505050509056fea2646970667358221220d5d131cb1465982fec250fabd0479abccd9bf2bd91ae3b0e986d230fce976fe964736f6c63430006060033a26469706673582212208abdf723e74b430869cdaaff6e24002838bf07b25cf7718fcd0805677537971664736f6c63430006060033608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6123c9806100db6000396000f3fe6080604052600436106100fe5760003560e01c80638da5cb5b11610095578063d0e30db011610064578063d0e30db0146104d6578063d58544a6146104e0578063df5dd1a514610544578063df791e5014610588578063f2fde38b146105f6576100fe565b80638da5cb5b1461033b578063a771087a14610392578063bcbf4382146103f7578063d004f0f714610488576100fe565b806347e7ef24116100d157806347e7ef241461020d57806351cff8d91461025b578063715018a61461029f57806381656a95146102b6576100fe565b806303438dd01461010357806316345f181461014757806324d34958146101ac5780633ccfd60b14610203575b600080fd5b6101456004803603602081101561011957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610647565b005b34801561015357600080fd5b506101966004803603602081101561016a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a77565b6040518082815260200191505060405180910390f35b3480156101b857600080fd5b506101c1610b60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020b610b86565b005b6102596004803603604081101561022357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c63565b005b61029d6004803603602081101561027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f32565b005b3480156102ab57600080fd5b506102b461113a565b005b3480156102c257600080fd5b50610325600480360360408110156102d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c2565b6040518082815260200191505060405180910390f35b34801561034757600080fd5b506103506112e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039e57600080fd5b506103e1600480360360208110156103b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611310565b6040518082815260200191505060405180910390f35b34801561040357600080fd5b506104466004803603602081101561041a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611328565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104d46004803603604081101561049e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061135b565b005b6104de611813565b005b610542600480360360408110156104f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118b1565b005b6105866004803603602081101561055a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119fc565b005b6105f46004803603606081101561059e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b09565b005b34801561060257600080fd5b506106456004803603602081101561061957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612158565b005b600073ffffffffffffffffffffffffffffffffffffffff16600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561073c57600080fd5b6000341161074957600080fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b1580156107b357600080fd5b505afa1580156107c7573d6000803e3d6000fd5b505050506040513d60208110156107dd57600080fd5b810190808051906020019092919050505090506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b15801561089757600080fd5b505afa1580156108ab573d6000803e3d6000fd5b505050506040513d60208110156108c157600080fd5b8101908080519060200190929190505050905060008282816108df57fe5b0434029050600081116108ee57fe5b808473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561096c57600080fd5b505afa158015610980573d6000803e3d6000fd5b505050506040513d602081101561099657600080fd5b8101908080519060200190929190505050116109ae57fe5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a3557600080fd5b505af1158015610a49573d6000803e3d6000fd5b505050506040513d6020811015610a5f57600080fd5b81019080805190602001909291905050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1e57600080fd5b505afa158015610b32573d6000803e3d6000fd5b505050506040513d6020811015610b4857600080fd5b81019080805190602001909291905050509050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610bd457fe5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c5f573d6000803e3d6000fd5b5050565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cea57600080fd5b505af1158015610cfe573d6000803e3d6000fd5b505050506040513d6020811015610d1457600080fd5b8101908080519060200190929190505050508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050506040513d6020811015610e0b57600080fd5b8101908080519060200190929190505050610e2557600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610fbd57fe5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156110fa57600080fd5b505af115801561110e573d6000803e3d6000fd5b505050506040513d602081101561112457600080fd5b8101908080519060200190929190505050505050565b611142612365565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6002602052816000526040600020602052806000526040600020600091509150505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156113f457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561145057600080fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b1580156114ba57600080fd5b505afa1580156114ce573d6000803e3d6000fd5b505050506040513d60208110156114e457600080fd5b810190808051906020019092919050505090506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b15801561159e57600080fd5b505afa1580156115b2573d6000803e3d6000fd5b505050506040513d60208110156115c857600080fd5b8101908080519060200190929190505050905060008183816115e657fe5b0434029050803073ffffffffffffffffffffffffffffffffffffffff16311161160b57fe5b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b330866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561169257600080fd5b505af11580156116a6573d6000803e3d6000fd5b505050506040513d60208110156116bc57600080fd5b8101908080519060200190929190505050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561178957600080fd5b505af115801561179d573d6000803e3d6000fd5b505050506040513d60208110156117b357600080fd5b8101908080519060200190929190505050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561180b573d6000803e3d6000fd5b505050505050565b6000341161182057600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6118b9612365565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461197a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b611a04612365565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ac5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611ba257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c3b57600080fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b158015611ce257600080fd5b505afa158015611cf6573d6000803e3d6000fd5b505050506040513d6020811015611d0c57600080fd5b810190808051906020019092919050505090506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b815260040160206040518083038186803b158015611dc657600080fd5b505afa158015611dda573d6000803e3d6000fd5b505050506040513d6020811015611df057600080fd5b810190808051906020019092919050505090506000828281611e0e57fe5b0484029050808573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611e9157600080fd5b505afa158015611ea5573d6000803e3d6000fd5b505050506040513d6020811015611ebb57600080fd5b810190808051906020019092919050505011611ed357fe5b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b330866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611f5a57600080fd5b505af1158015611f6e573d6000803e3d6000fd5b505050506040513d6020811015611f8457600080fd5b8101908080519060200190929190505050508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561205157600080fd5b505af1158015612065573d6000803e3d6000fd5b505050506040513d602081101561207b57600080fd5b8101908080519060200190929190505050508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561211457600080fd5b505af1158015612128573d6000803e3d6000fd5b505050506040513d602081101561213e57600080fd5b810190808051906020019092919050505050505050505050565b612160612365565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612221576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156122a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061236e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f4b7439f7608beb104ac3dd2c3ec78aeaf34aa884e2cb9d72348f7b528f2662064736f6c6343000606003360806040523480156200001157600080fd5b506040516200165638038062001656833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051906020019092919050505083838160039080519060200190620001e6929190620004a6565b508060049080519060200190620001ff929190620004a6565b506012600560006101000a81548160ff021916908360ff16021790555050506200023081836200023a60201b60201c565b5050505062000555565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620002f2600083836200041860201b60201c565b6200030e816002546200041d60201b62000f2d1790919060201c565b6002819055506200036c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200041d60201b62000f2d1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b6000808284019050838110156200049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004e957805160ff19168380011785556200051a565b828001600101855582156200051a579182015b8281111562000519578251825591602001919060010190620004fc565b5b5090506200052991906200052d565b5090565b6200055291905b808211156200054e57600081600090555060010162000534565b5090565b90565b6110f180620005656000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f6105a4565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105ae565b604051808215151515815260200191505060405180910390f35b610243610687565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069e565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610751565b6040518082815260200191505060405180910390f35b610325610799565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061083b565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610908565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610926565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059a6105936109ad565b84846109b5565b6001905092915050565b6000600254905090565b60006105bb848484610bac565b61067c846105c76109ad565b6106778560405180606001604052806028815260200161102660289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061062d6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60006107476106ab6109ad565b8461074285600160006106bc6109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6109b5565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108315780601f1061080657610100808354040283529160200191610831565b820191906000526020600020905b81548152906001019060200180831161081457829003601f168201915b5050505050905090565b60006108fe6108486109ad565b846108f98560405180606001604052806025815260200161109760259139600160006108726109ad565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6109b5565b6001905092915050565b600061091c6109156109ad565b8484610bac565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110736024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fde6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061104e6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fbb6023913960400191505060405180910390fd5b610cc3838383610fb5565b610d2e81604051806060016040528060268152602001611000602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e6d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dc1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610edf578082015181840152602081019050610ec4565b50505050905090810190601f168015610f0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610fab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a85f398cb3c05d7f70a7e9a8a50d9d696ba7a3e0fe2569ba9670180f56cd1f3d64736f6c63430006060033608060405234801561001057600080fd5b50604051610c4d380380610c4d833981810160405260a081101561003357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050600061007c61013760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35061012d858585858561013f60201b60201c565b505050505061026e565b600033905090565b61014d61013760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b84600060146101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508360018190555060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690505050505050565b6109d08061027d6000396000f3fe6080604052600436106100865760003560e01c80637284e416116100595780637284e4161461016c5780638da5cb5b146101fc5780639a6fc8f514610253578063f2fde38b146102fa578063feaf968c1461034b57610086565b80631c12940a1461008b578063313ce567146100f957806354fd4d501461012a578063715018a614610155575b600080fd5b6100f7600480360360a08110156100a157600080fd5b81019080803569ffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803569ffffffffffffffffffff1690602001909291905050506103c2565b005b34801561010557600080fd5b5061010e6104eb565b604051808260ff1660ff16815260200191505060405180910390f35b34801561013657600080fd5b5061013f6104f3565b6040518082815260200191505060405180910390f35b34801561016157600080fd5b5061016a6104fb565b005b34801561017857600080fd5b50610181610683565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c15780820151818401526020810190506101a6565b50505050905090810190601f1680156101ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020857600080fd5b506102116106c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025f57600080fd5b506102986004803603602081101561027657600080fd5b81019080803569ffffffffffffffffffff1690602001909291905050506106e9565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b34801561030657600080fd5b506103496004803603602081101561031d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070c565b005b34801561035757600080fd5b50610360610919565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6103ca61096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461048b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b84600060146101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508360018190555060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690505050505050565b600080905090565b600080905090565b61050361096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60606040518060400160405280600481526020017f6d6f636b00000000000000000000000000000000000000000000000000000000815250905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008060006106f9610919565b9450945094509450945091939590929450565b61071461096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561085b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109756026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060008060149054906101000a900469ffffffffffffffffffff16600154600254600354600460009054906101000a900469ffffffffffffffffffff16945094509450945094509091929394565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122016c8195de5bd05513098245e52940ed1b1394930cc4723360dd6f6f2acb078c164736f6c63430006060033608060405234801561001057600080fd5b506040516102003803806102008339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061016c806100946000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004e565b6040518082815260200191505060405180910390f35b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100be57600080fd5b505afa1580156100d2573d6000803e3d6000fd5b505050506040513d60a08110156100e857600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945083955050505050509056fea2646970667358221220d5d131cb1465982fec250fabd0479abccd9bf2bd91ae3b0e986d230fce976fe964736f6c63430006060033",
  "deployedBytecode": "0x6080604052600436106200013a5760003560e01c80636d60620111620000af578063b8bf4f35116200006d578063b8bf4f35146200065c578063bd7cf5b214620006b6578063c8e1b0621462000707578063e2d84e231462000761578063f7c1ec7714620007bb576200013a565b80636d606201146200049a5780637231105f14620004f4578063807a012d146200054e5780638e33f77614620005a85780638ea830311462000602576200013a565b80634d09482311620000fd5780634d09482314620002d857806350a3423d1462000332578063527ba408146200038c578063588c2f1414620003e6578063611509231462000440576200013a565b8063089537ae146200013f578063107c279f14620001995780632e81387014620001f357806336019a61146200024d5780634780eac1146200027e575b600080fd5b3480156200014c57600080fd5b506200015762000815565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620001a657600080fd5b50620001b16200083f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200020057600080fd5b506200020b62000869565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200027c600480360360208110156200026557600080fd5b810190808035906020019092919050505062000893565b005b3480156200028b57600080fd5b506200029662000a2e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620002e557600080fd5b50620002f062000a54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200033f57600080fd5b506200034a62000a7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200039957600080fd5b50620003a462000aa4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620003f357600080fd5b50620003fe62000aca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200044d57600080fd5b506200045862000af3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620004a757600080fd5b50620004b262000b19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200050157600080fd5b506200050c62000b3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200055b57600080fd5b506200056662000b65565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620005b557600080fd5b50620005c062000b8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200060f57600080fd5b506200061a62000bb1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200066957600080fd5b506200067462000bd6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6200070560048036036040811015620006ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000c00565b005b3480156200071457600080fd5b506200071f62000dd0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200076e57600080fd5b506200077962000dfa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620007c857600080fd5b50620007d362000e24565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080826000806000604051620008aa9062000e4e565b808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff16815260200195505050505050604051809103906000f08015801562000905573d6000803e3d6000fd5b509050600081604051620009199062000e5c565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156200096c573d6000803e3d6000fd5b5090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663df5dd1a5826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801562000a1057600080fd5b505af115801562000a25573d6000803e3d6000fd5b50505050505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008082600080600060405162000c179062000e4e565b808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff16815260200195505050505050604051809103906000f08015801562000c72573d6000803e3d6000fd5b50905060008160405162000c869062000e5c565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801562000cd9573d6000803e3d6000fd5b5090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d58544a685836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801562000db157600080fd5b505af115801562000dc6573d6000803e3d6000fd5b5050505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c4d8062000e6b83390190565b6102008062001ab88339019056fe608060405234801561001057600080fd5b50604051610c4d380380610c4d833981810160405260a081101561003357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050600061007c61013760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35061012d858585858561013f60201b60201c565b505050505061026e565b600033905090565b61014d61013760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b84600060146101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508360018190555060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690505050505050565b6109d08061027d6000396000f3fe6080604052600436106100865760003560e01c80637284e416116100595780637284e4161461016c5780638da5cb5b146101fc5780639a6fc8f514610253578063f2fde38b146102fa578063feaf968c1461034b57610086565b80631c12940a1461008b578063313ce567146100f957806354fd4d501461012a578063715018a614610155575b600080fd5b6100f7600480360360a08110156100a157600080fd5b81019080803569ffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803569ffffffffffffffffffff1690602001909291905050506103c2565b005b34801561010557600080fd5b5061010e6104eb565b604051808260ff1660ff16815260200191505060405180910390f35b34801561013657600080fd5b5061013f6104f3565b6040518082815260200191505060405180910390f35b34801561016157600080fd5b5061016a6104fb565b005b34801561017857600080fd5b50610181610683565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c15780820151818401526020810190506101a6565b50505050905090810190601f1680156101ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020857600080fd5b506102116106c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561025f57600080fd5b506102986004803603602081101561027657600080fd5b81019080803569ffffffffffffffffffff1690602001909291905050506106e9565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b34801561030657600080fd5b506103496004803603602081101561031d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061070c565b005b34801561035757600080fd5b50610360610919565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6103ca61096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461048b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b84600060146101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508360018190555060025492506003549150600460009054906101000a900469ffffffffffffffffffff1690505050505050565b600080905090565b600080905090565b61050361096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60606040518060400160405280600481526020017f6d6f636b00000000000000000000000000000000000000000000000000000000815250905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008060006106f9610919565b9450945094509450945091939590929450565b61071461096c565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561085b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109756026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060008060149054906101000a900469ffffffffffffffffffff16600154600254600354600460009054906101000a900469ffffffffffffffffffff16945094509450945094509091929394565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122016c8195de5bd05513098245e52940ed1b1394930cc4723360dd6f6f2acb078c164736f6c63430006060033608060405234801561001057600080fd5b506040516102003803806102008339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061016c806100946000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e15f47314610030575b600080fd5b61003861004e565b6040518082815260200191505060405180910390f35b6000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156100be57600080fd5b505afa1580156100d2573d6000803e3d6000fd5b505050506040513d60a08110156100e857600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945083955050505050509056fea2646970667358221220d5d131cb1465982fec250fabd0479abccd9bf2bd91ae3b0e986d230fce976fe964736f6c63430006060033a26469706673582212208abdf723e74b430869cdaaff6e24002838bf07b25cf7718fcd0805677537971664736f6c63430006060033",
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
